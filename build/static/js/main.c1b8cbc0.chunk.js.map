{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchQuery","handleSearchChange","value","onChange","PersonForm","addPerson","handleNameChange","handleNumberChange","newName","phoneNum","onSubmit","type","Person","person","name","number","deletePerson","onClick","Persons","persons","map","p","id","baseUrl","personService","getAll","axios","get","then","res","data","create","newPerson","post","del","delete","update","put","Notification","message","className","App","useState","setPersons","setNewName","newNumber","setPhoneNum","setSearchQuery","successMsg","setSuccessMsg","errorMsg","setErrorMsg","useEffect","personsToShow","filter","toLowerCase","includes","e","target","preventDefault","idOfExistingP","some","msg","window","confirm","newP","setTimeout","catch","err","console","log","concat","find","_","ReactDOM","render","document","getElementById"],"mappings":"6KASeA,EATA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,mBAC7B,OACE,oDACoB,IAClB,uBAAOC,MAAOF,EAAaG,SAAUF,QCkB5BG,EAtBI,SAAC,GAMb,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEA,OACE,uBAAMC,SAAUL,EAAhB,UACE,yCACQ,uBAAOH,MAAOM,EAASL,SAAUG,OAEzC,2CACU,uBAAOJ,MAAOO,EAAUN,SAAUI,OAE5C,8BACE,wBAAQI,KAAK,SAAb,uBCROC,EARA,SAAC,GAAgD,IAAD,IAA7CC,OAAUC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAAUC,EAAmB,EAAnBA,aAC1C,OACE,gCACGF,EADH,IACUC,EADV,IACkB,wBAAQE,QAASD,EAAjB,wBCaPE,EAdC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASH,EAAmB,EAAnBA,aAC1B,OACE,mCACGG,EAAQC,KAAI,SAAAC,GAAC,OACZ,cAAC,EAAD,CAEER,OAAQQ,EACRL,aAAc,kBAAMA,EAAaK,EAAEC,MAF9BD,EAAEP,Y,gBCLXS,EAAU,oCAyBDC,EAPO,CACpBC,OAjBa,WACb,OAAOC,IAAMC,IAAIJ,GAASK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAiB1CC,OAda,SAAAC,GACb,OAAON,IAAMO,KAAKV,EAASS,GAAWJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SActDI,IAXU,SAAAZ,GACV,OAAOI,IAAMS,OAAN,UAAgBZ,EAAhB,YAA2BD,IAAMM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAWxDM,OARa,SAACd,EAAIU,GAClB,OAAON,IAAMW,IAAN,UAAad,EAAb,YAAwBD,GAAMU,GAAWJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UCTnDQ,EARM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAAS5B,EAAW,EAAXA,KAC/B,OAAgB,OAAZ4B,EACK,KAGF,qBAAKC,UAAW7B,EAAO,gBAAvB,SAAyC4B,KC2GnCE,EAzGH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTvB,EADS,KACAwB,EADA,OAGcD,mBAAS,IAHvB,mBAGTlC,EAHS,KAGAoC,EAHA,OAIiBF,mBAAS,IAJ1B,mBAITG,EAJS,KAIEC,EAJF,OAKsBJ,mBAAS,IAL/B,mBAKT1C,EALS,KAKI+C,EALJ,OAMoBL,mBAAS,MAN7B,mBAMTM,EANS,KAMGC,EANH,OAOgBP,mBAAS,MAPzB,mBAOTQ,EAPS,KAOCC,EAPD,KAShBC,qBAAU,WACR5B,EAAcC,SAASG,MAAK,SAAAT,GAAO,OAAIwB,EAAWxB,QACjD,IAEH,IA6DMkC,EAAgBlC,EAAQmC,QAAO,SAAAjC,GAAC,OACpCA,EAAEP,KAAKyC,cAAcC,SAASxD,EAAYuD,kBAG5C,OACE,gCACE,2CACCP,GAAc,cAAC,EAAD,CAAcT,QAASS,EAAYrC,KAAK,YACtDuC,GAAY,cAAC,EAAD,CAAcX,QAASW,EAAUvC,KAAK,UAEnD,cAAC,EAAD,CAAcV,mBAZS,SAAAwD,GAAC,OAAIV,EAAeU,EAAEC,OAAOxD,QAYlBF,gBAElC,2CAEA,cAAC,EAAD,CAEIK,UA7EU,SAAAoD,GAChBA,EAAEE,iBACF,IAAM3B,EAAY,CAAElB,KAAMN,EAASO,OAAQ8B,GAEvCe,EAAgB,EAMpB,GALqBzC,EAAQ0C,MAAK,SAAAxC,GAEhC,OADAuC,EAAgBvC,EAAEC,GACXD,EAAEP,OAASN,KAGpB,CACE,IAAMsD,EAAG,UAAMtD,EAAN,0EACLuD,OAAOC,QAAQF,IACjBtC,EACGY,OAAOwB,EAAe5B,GACtBJ,MAAK,SAAAqC,GACJtB,EAAWxB,EAAQC,KAAI,SAAAC,GAAC,OAAKA,EAAEC,KAAOsC,EAAgBvC,EAAI4C,MAC1DhB,EAAc,WAAD,OAAYgB,EAAKnD,KAAjB,wBAAqCmD,EAAKlD,SACvDmD,YAAW,kBAAMjB,EAAc,QAAO,QAEvCkB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZjB,EAAY,kBAAD,OACS3C,EADT,0CAGX0D,YAAW,kBAAMf,EAAY,QAAO,aAM5C3B,EAAcO,OAAOC,GAAWJ,MAAK,SAAAf,GACnC8B,EAAWxB,EAAQoD,OAAO1D,IAC1B+B,EAAW,IACXE,EAAY,IACZG,EAAc,SAAD,OAAUpC,EAAOC,OAC9BoD,YAAW,kBAAMjB,EAAc,QAAO,SA0ClC3C,iBArBiB,SAAAmD,GAAC,OAAIb,EAAWa,EAAEC,OAAOxD,QAsB1CK,mBArBmB,SAAAkD,GAAC,OAAIX,EAAYW,EAAEC,OAAOxD,QAsB7CM,UACAC,SAAUoC,IAId,yCAEA,cAAC,EAAD,CAAS1B,QAASkC,EAAerC,aA/ChB,SAAAM,GACnB,IAAMT,EAASM,EAAQqD,MAAK,SAAAnD,GAAC,OAAIA,EAAEC,KAAOA,KAEtCyC,OAAOC,QAAP,iBAAyBnD,EAAOC,KAAhC,OACFU,EACGU,IAAIZ,GACJM,MAAK,SAAA6C,GAAC,OAAI9B,EAAWxB,EAAQmC,QAAO,SAAAjC,GAAC,OAAIA,EAAEC,KAAOA,SAClD6C,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZjB,EAAY,kBAAD,OACStC,EAAOC,KADhB,0CAGXoD,YAAW,kBAAMf,EAAY,QAAO,e,MCpE9CuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c1b8cbc0.chunk.js","sourcesContent":["const Filter = ({ searchQuery, handleSearchChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with{' '}\r\n      <input value={searchQuery} onChange={handleSearchChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","const PersonForm = ({\r\n  addPerson,\r\n  handleNameChange,\r\n  handleNumberChange,\r\n  newName,\r\n  phoneNum,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={phoneNum} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type='submit'>add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","const Person = ({ person: { name, number }, deletePerson }) => {\r\n  return (\r\n    <div>\r\n      {name} {number} <button onClick={deletePerson}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person\r\n","import Person from './Person'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n  return (\r\n    <>\r\n      {persons.map(p => (\r\n        <Person\r\n          key={p.name}\r\n          person={p}\r\n          deletePerson={() => deletePerson(p.id)}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(res => res.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  return axios.post(baseUrl, newPerson).then(res => res.data)\r\n}\r\n\r\nconst del = id => {\r\n  return axios.delete(`${baseUrl}/${id}`).then(res => res.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  return axios.put(`${baseUrl}/${id}`, newPerson).then(res => res.data)\r\n}\r\n\r\nconst personService = {\r\n  getAll,\r\n  create,\r\n  del,\r\n  update,\r\n}\r\n\r\nexport default personService\r\n","const Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return <div className={type + ' notification'}>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [newName, setNewName] = useState('')\n  const [newNumber, setPhoneNum] = useState('')\n  const [searchQuery, setSearchQuery] = useState('')\n  const [successMsg, setSuccessMsg] = useState(null)\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(persons => setPersons(persons))\n  }, [])\n\n  const addPerson = e => {\n    e.preventDefault()\n    const newPerson = { name: newName, number: newNumber }\n\n    let idOfExistingP = 0\n    const personExists = persons.some(p => {\n      idOfExistingP = p.id\n      return p.name === newName\n    })\n\n    if (personExists) {\n      const msg = `${newName} is already added to phonebook, replace the old number with a new one?`\n      if (window.confirm(msg)) {\n        personService\n          .update(idOfExistingP, newPerson)\n          .then(newP => {\n            setPersons(persons.map(p => (p.id !== idOfExistingP ? p : newP)))\n            setSuccessMsg(`Changed ${newP.name}'s number to ${newP.number}`)\n            setTimeout(() => setSuccessMsg(null), 5000)\n          })\n          .catch(err => {\n            console.log(err)\n            setErrorMsg(\n              `Information of ${newName} has already been removed from server`,\n            )\n            setTimeout(() => setErrorMsg(null), 5000)\n          })\n      }\n      return\n    }\n\n    personService.create(newPerson).then(person => {\n      setPersons(persons.concat(person))\n      setNewName('')\n      setPhoneNum('')\n      setSuccessMsg(`Added ${person.name}`)\n      setTimeout(() => setSuccessMsg(null), 5000)\n    })\n  }\n\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id)\n\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .del(id)\n        .then(_ => setPersons(persons.filter(p => p.id !== id)))\n        .catch(err => {\n          console.log(err)\n          setErrorMsg(\n            `Information of ${person.name} has already been removed from server`,\n          )\n          setTimeout(() => setErrorMsg(null), 5000)\n        })\n    }\n  }\n\n  const handleNameChange = e => setNewName(e.target.value)\n  const handleNumberChange = e => setPhoneNum(e.target.value)\n  const handleSearchChange = e => setSearchQuery(e.target.value)\n\n  const personsToShow = persons.filter(p =>\n    p.name.toLowerCase().includes(searchQuery.toLowerCase()),\n  )\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {successMsg && <Notification message={successMsg} type='success' />}\n      {errorMsg && <Notification message={errorMsg} type='error' />}\n\n      <Filter {...{ handleSearchChange, searchQuery }} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm\n        {...{\n          addPerson,\n          handleNameChange,\n          handleNumberChange,\n          newName,\n          phoneNum: newNumber,\n        }}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}